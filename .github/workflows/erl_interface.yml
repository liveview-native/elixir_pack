name: erl_interface
on:
  workflow_dispatch:
    inputs:
      otp_version:
        description: 'OTP Version'
        required: true
        type: string
jobs:
  ios:
    name: Build iOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/erl_interface_build.yml
        with:
          otp_version: ${{ inputs.otp_version }}
          xcomp_conf: xcomp/erl-xcomp-arm64-ios.conf
          output: universal-libei-ios.a

  ios_simulator:
    name: Build iOS Simulator
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build for arm64
        uses: ./.github/actions/erl_interface_build.yml
        with:
          otp_version: ${{ inputs.otp_version }}
          xcomp_conf: xcomp/erl-xcomp-arm64-iossimulator.conf
          output: libei-iossimulator-arm64.a
      - name: Build for x86_64
        uses: ./.github/actions/erl_interface_build.yml
        with:
          otp_version: ${{ inputs.otp_version }}
          xcomp_conf: xcomp/erl-xcomp-x86_64-iossimulator.conf
          output: libei-iossimulator-x86_64.a
      - name: Retrieve Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: libei-iossimulator-*.a
      - name: Merge Architectures
        run: lipo -create -output universal-libei-iossimulator.a $(find artifacts -name '*.a' | xargs -I{} printf -- '{} ')
      - name: Produce Artifact
        uses: actions/upload-artifact@v4
        with:
          name: universal-libei-iossimulator.a
          path: universal-libei-iossimulator.a

  xcframework:
    runs-on: macos-latest
    needs: [ios, ios_simulator]
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: priv/erl_interface_include
      - name: Retrieve Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: universal-libei-*.a
          path: artifacts
      - name: Make xcframework
        run: xcodebuild -create-xcframework -output libei.xcframework $(find artifacts -name '*.a' | xargs -I{} printf -- '-library %s -headers priv/erl_interface_include ' {})
      - name: Produce Artifact
        uses: actions/upload-artifact@v4
        with:
          name: libei.xcframework
          path: libei.xcframework